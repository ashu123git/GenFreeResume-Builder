Plan for this project.
1> Environment setup. (This means creating react app, intalling extension that are ES7+ React snippet, Tailwind CSS Intellisence. Install react-router-dom, react-icons, framer-motion, google fonts)
2> Setup github configurations (Done)
3> Install react app (Done)
4> Install tailwind CSS package (Done)
5> install react router, react icons (Done)
6> Install firebase for authentication
7> Install framer motion for animation
8> Setup Firebase project
9> React query library is used for state management
10> React toastify library is used for alert notification


First of all we deleted initial src folder from Frontend and created our new src folder because initial was pre-setup but we have to customize our application. Now I setted up the front-end. Setted up the tailwind css from Tailwind website. I just followed their steps from tailwind using react website. Now I setted up the firebase. For this, I installed firebase using npm and then created a project in google.firebase.com. Now we have to create a web app and provide our name. After this we need firebase storage. So go to homepage. Build > Storage > Get Started. Click start in production mode. Now once the storage is set up, we can add security rules as of who can access the data/website and who cannot. So initially, it will be set to denied for all users. So we have to go to security rules, and update false to true so that it is accessble to everyone and then later we can update the rules. After that we need to setup firestore database. So again Build > Firestore Database > Create Database. After that update rules to true.

Now create a new folder "config" in src and inside that create a new file as firebase.config.js and fill it with the required code. The firebaseconfig code we will get from project settings in firebase website.


// Day 2
To create an admin feature, I have used one of my id's as an admin id. How ? I have created a helpers.js file inside utils folder where I have hardcoded uid of one of my account from firebase. And now in header.jsx I have used a conditional statement that if the current logged in user's uid is there in the helpers.js file, then that id is an admin id